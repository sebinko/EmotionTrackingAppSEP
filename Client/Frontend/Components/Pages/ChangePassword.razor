@page "/ChangePassword"
@using System.ComponentModel.DataAnnotations
@using Frontend.Components.Shared
@using Frontend.Services
@using Microsoft.AspNetCore.Components.Authorization

@inject AuthenticationStateProvider AuthService
@inject NavigationManager NavigationManager

<h3>Change Password</h3>

<Alert @ref="alert"/>

<EditForm Model="changePasswordModel" OnValidSubmit="HandleValidSubmit">
  <DataAnnotationsValidator/>
  <ValidationSummary/>

  <div class="mb-3">
    <label for="currentPassword" class="form-label">Current Password</label>
    <InputText type="password" id="currentPassword" class="form-control" @bind-Value="changePasswordModel.CurrentPassword"/>
  </div>

  <div class="mb-3">
    <label for="newPassword" class="form-label">New Password</label>
    <InputText type="password" id="newPassword" class="form-control" @bind-Value="changePasswordModel.NewPassword"/>
  </div>

  <div class="mb-3">
    <label for="confirmPassword" class="form-label">Confirm New Password</label>
    <InputText type="password" id="confirmPassword" class="form-control" @bind-Value="changePasswordModel.ConfirmPassword"/>
  </div>

  <button type="submit" class="btn btn-primary">Change Password</button>
</EditForm>

@code {
  private Alert alert;

  private ChangePasswordModel changePasswordModel = new ChangePasswordModel();

  private async Task HandleValidSubmit()
  {
    var userWithToken = await ((AuthService)AuthService).GetAuth();

    try
    {
      await ((AuthService)AuthService).Login(userWithToken.User.Username, changePasswordModel.CurrentPassword);
    }
    catch (Exception)
    {
      alert.ShowFailed("Invalid current password");
      return;
    }

    if (changePasswordModel.NewPassword != changePasswordModel.ConfirmPassword)
    {
      return;
    }

    await ((AuthService)AuthService).ChangePassword(userWithToken, changePasswordModel.NewPassword);
    NavigationManager.NavigateTo("/");
  }

  public class ChangePasswordModel
  {
    [Required] public string CurrentPassword { get; set; }
    [Required] public string NewPassword { get; set; }
    [Required] public string ConfirmPassword { get; set; }
  }

}
@page "/CheckIn/EmotionCheckInUpdate/{id:int}/{emotion}"
@using API.DTO
@using Frontend.Services
@using Frontend.Services.Interfaces
@inject NavigationManager NavigationManager
@inject IEmotionCheckInService EmotionCheckInService

<h3 style="text-align: center;">Update Emotion Check-In</h3>

<div style="display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh;">
  <!-- Colorful Box -->
  <div style="width: 50%; padding: 30px; background-color: @Color; text-align: center; font-size: 28px; font-weight: bold; border-radius: 10px;">
    I feel @Emotion
    <div style="margin-top: 20px; font-size: 18px;">
      <label for="description">Description:</label>
      <!-- here is going to be the description-->
    </div>
  </div>

  
  <button @onclick="Submit" style="margin-top: 30px; padding: 10px 20px; font-size: 16px; background-color: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer;">
    Complete Check-In
  </button>
</div>

@code {
  [Parameter] public int Description { get; set; }
  [Parameter] public int Color { get; set; }
  [Parameter] public int Id { get; set; }
  [Parameter] public string Emotion { get; set; }
  private EmotionCheckInDTO? emotionCheckIn;

  protected override async Task OnInitializedAsync()
  {
    emotionCheckIn = await EmotionCheckInService.Get(Id);
  }

  private async Task Submit()
  {
    if (emotionCheckIn != null)
    {
      emotionCheckIn.Emotion = Emotion;
      await EmotionCheckInService.Update(Id,new EmotionCheckInUpdateDTO
      {
        id = emotionCheckIn.Id.Value,
        Emotion = emotionCheckIn.Emotion,
        Tags = new List<string>()
      });
      NavigationManager.NavigateTo("/CheckIn");
    }
  }
}